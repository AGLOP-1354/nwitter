{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNeet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","e","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setinit","setIsloggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d0852ca.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCJMfo_CLdgnmih6MDXg8e3gqrhIdUQAbs\",\r\n    authDomain: \"nwitter-3879c.firebaseapp.com\",\r\n    projectId: \"nwitter-3879c\",\r\n    storageBucket: \"nwitter-3879c.appspot.com\",\r\n    messagingSenderId: \"120995367242\",\r\n    appId: \"1:120995367242:web:787925c92d5ea248f5d9b3\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n        \r\n    const onSocialClick = async (event)=>{\r\n        const {target:{name},\r\n    }= event;\r\n    let provider;\r\n    if(name === 'google'){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if (name ==='github'){\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n    }\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n        />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNeet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async ()=>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () =>{\r\n        setEditing((prev)=> !prev);\r\n    };\r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNeet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event)=>{\r\n        const {target:{value},\r\n        }= event;\r\n        setNewNweet(value);\r\n    }\r\n    return(\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input onChange={onChange}\r\n                        type=\"text\" \r\n                        placeholder=\"Edit your Nweet\" \r\n                        value={newNeet} \r\n                        required \r\n                        autoFocus\r\n                        className=\"formInput\"\r\n                        />\r\n                        <input \r\n                            type=\"submit\"\r\n                            value=\"Update Nweet\"\r\n                            className=\"formBtn\" \r\n                        />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    { isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n        <img\r\n          src={attachment}\r\n          style={{\r\n            backgroundImage: attachment,\r\n          }}\r\n        />\r\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport {dbService} from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(()=>{\r\n        dbService.collection('nweets').onSnapshot((snapshot) =>{\r\n            const nweetArray = snapshot.docs.map((doc) =>({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        })\r\n    }, []);\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div  style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            ))}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogoutClick = ()=>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const getMyNweets = async()=>{\r\n        const nweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createAt\")\r\n        .get();\r\n        console.log(nweets.docs.map((doc)=>{doc.data()}))\r\n    }\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    }, []);\r\n    const onChange = (e)=>{\r\n        const {\r\n            target:{value},\r\n        }=e;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (e)=>{\r\n        e.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\nreturn(\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                type=\"text\" \r\n                autoFocus\r\n                placeholder=\"Display name\"\r\n                onChange={onChange}\r\n                value={newDisplayName}\r\n                className=\"formInput\"\r\n                /> \r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }} /> \r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>\r\n    )\r\n}\r\nexport default Profile;","\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from './Router';\r\nimport {authService} from \"../fbase\";\r\n\r\nfunction App() {\r\n  const [init, setinit] = useState(false);\r\n  const [isLoggedIn, setIsloggedIn] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        setIsloggedIn(true);\r\n        setUserObj(user);\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args)=> user.updateProfile(args),\r\n        });\r\n      }else{\r\n        setIsloggedIn(false);\r\n        setUserObj(null);\r\n      }\r\n      setinit(true);\r\n    })\r\n  },[]);\r\n  const refreshUser = ()=>{\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args)=> user.updateProfile(args),\r\n    });\r\n  }\r\n  return(\r\n   <>\r\n  {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}